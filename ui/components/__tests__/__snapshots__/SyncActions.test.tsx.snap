// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SyncActions snapshots hideDropdown 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c5 {
  padding: 8px;
}

.c2.MuiButton-root {
  height: 32px;
  font-size: 12px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  line-height: 1;
  border-radius: 2px;
  font-weight: 600;
}

.c2.MuiButton-outlined {
  padding: 8px 12px;
}

.c2.MuiButton-outlinedPrimary {
  border-color: #d8d8d8;
}

.c3.MuiButton-outlined {
  margin-right: 0;
}

.c4 {
  position: absolute;
  overflow: hidden;
  background: #fff;
  height: 0px;
  -webkit-transition-property: height;
  transition-property: height;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  z-index: 1;
}

<div
  className="c0"
>
  <div
    className="SyncButton"
    style={
      Object {
        "display": "inline-block",
        "position": "relative",
      }
    }
  >
    <div
      className="c1"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 c3 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
    <div
      className="c1 c4"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "whiteSpace": "nowrap",
          }
        }
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync Without Source
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
  </div>
  <div
    className="c5"
  />
  <button
    className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Suspend
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
</div>
`;

exports[`SyncActions snapshots non-suspended 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 svg {
  height: 16px;
  width: 16px;
}

.c7 svg path.path-fill,
.c7 svg line.path-fill,
.c7 svg polygon.path-fill,
.c7 svg rect.path-fill,
.c7 svg circle.path-fill,
.c7 svg polyline.path-fill {
  fill: !important;
  -webkit-transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c7 svg path.stroke-fill,
.c7 svg line.stroke-fill,
.c7 svg polygon.stroke-fill,
.c7 svg rect.stroke-fill,
.c7 svg circle.stroke-fill,
.c7 svg polyline.stroke-fill {
  stroke: !important;
  -webkit-transition: stroke 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: stroke 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c7 svg rect.rect-height {
  height: 16px;
  width: 16px;
}

.c7.downward {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.c7.upward {
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c7 img {
  width: 16px;
}

.c9 {
  padding: 8px;
}

.c2.MuiButton-root {
  height: 32px;
  font-size: 12px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  line-height: 1;
  border-radius: 2px;
  font-weight: 600;
}

.c2.MuiButton-outlined {
  padding: 8px 12px;
}

.c2.MuiButton-outlinedPrimary {
  border-color: #d8d8d8;
}

.c4.MuiButton-root {
  border-radius: 50%;
  min-width: 38px;
  height: 38px;
  padding: 0;
}

.c4.MuiButton-text {
  padding: 0;
}

.c5.MuiButton-outlined {
  border-radius: 0 2px 2px 0;
}

.c5.MuiButton-outlinedPrimary {
  border-color: #d8d8d8;
}

.c5.MuiButton-root {
  min-width: 0;
  height: 32px;
  padding: 8px 4px;
}

.c5.MuiButton-text {
  padding: 0;
}

.c3.MuiButton-outlined {
  margin-right: 0;
  border-radius: 2px 0 0 2px;
  border-right: none;
}

.c8 {
  position: absolute;
  overflow: hidden;
  background: #fff;
  height: 0px;
  -webkit-transition-property: height;
  transition-property: height;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  z-index: 1;
}

<div
  className="c0"
>
  <div
    className="SyncButton"
    style={
      Object {
        "display": "inline-block",
        "position": "relative",
      }
    }
  >
    <div
      className="c1"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 c3 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync
        </span>
      </button>
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c4 c5 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <div
            className="c6 c7"
          >
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M7 10l5 5 5-5z"
              />
            </svg>
          </div>
        </span>
      </button>
    </div>
    <div
      className="c1 c8"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "whiteSpace": "nowrap",
          }
        }
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync Without Source
        </span>
      </button>
    </div>
  </div>
  <div
    className="c9"
  />
  <button
    className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Suspend
    </span>
  </button>
</div>
`;

exports[`SyncActions snapshots suspended 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 svg {
  height: 16px;
  width: 16px;
}

.c7 svg path.path-fill,
.c7 svg line.path-fill,
.c7 svg polygon.path-fill,
.c7 svg rect.path-fill,
.c7 svg circle.path-fill,
.c7 svg polyline.path-fill {
  fill: !important;
  -webkit-transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c7 svg path.stroke-fill,
.c7 svg line.stroke-fill,
.c7 svg polygon.stroke-fill,
.c7 svg rect.stroke-fill,
.c7 svg circle.stroke-fill,
.c7 svg polyline.stroke-fill {
  stroke: !important;
  -webkit-transition: stroke 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: stroke 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c7 svg rect.rect-height {
  height: 16px;
  width: 16px;
}

.c7.downward {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.c7.upward {
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c7 img {
  width: 16px;
}

.c9 {
  padding: 8px;
}

.c2.MuiButton-root {
  height: 32px;
  font-size: 12px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  line-height: 1;
  border-radius: 2px;
  font-weight: 600;
}

.c2.MuiButton-outlined {
  padding: 8px 12px;
}

.c2.MuiButton-outlinedPrimary {
  border-color: #d8d8d8;
}

.c4.MuiButton-root {
  border-radius: 50%;
  min-width: 38px;
  height: 38px;
  padding: 0;
}

.c4.MuiButton-text {
  padding: 0;
}

.c5.MuiButton-outlined {
  border-radius: 0 2px 2px 0;
}

.c5.MuiButton-outlinedPrimary {
  border-color: #d8d8d8;
}

.c5.MuiButton-root {
  min-width: 0;
  height: 32px;
  padding: 8px 4px;
}

.c5.MuiButton-text {
  padding: 0;
}

.c3.MuiButton-outlined {
  margin-right: 0;
  border-radius: 2px 0 0 2px;
  border-right: none;
}

.c8 {
  position: absolute;
  overflow: hidden;
  background: #fff;
  height: 0px;
  -webkit-transition-property: height;
  transition-property: height;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  z-index: 1;
}

<div
  className="c0"
>
  <div
    className="SyncButton"
    style={
      Object {
        "display": "inline-block",
        "position": "relative",
      }
    }
  >
    <div
      className="c1"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 c3 MuiButton-outlinedPrimary MuiButton-disableElevation Mui-disabled Mui-disabled"
        disabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync
        </span>
      </button>
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c4 c5 MuiButton-outlinedPrimary MuiButton-disableElevation Mui-disabled Mui-disabled"
        disabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <div
            className="c6 c7"
          >
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M7 10l5 5 5-5z"
              />
            </svg>
          </div>
        </span>
      </button>
    </div>
    <div
      className="c1 c8"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "whiteSpace": "nowrap",
          }
        }
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync Without Source
        </span>
        <span
          className="MuiTouchRipple-root"
        />
      </button>
    </div>
  </div>
  <div
    className="c9"
  />
  <button
    className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Resume
    </span>
    <span
      className="MuiTouchRipple-root"
    />
  </button>
</div>
`;

exports[`SyncActions snapshots wide 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  width: 100%;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 svg {
  height: 16px;
  width: 16px;
}

.c7 svg path.path-fill,
.c7 svg line.path-fill,
.c7 svg polygon.path-fill,
.c7 svg rect.path-fill,
.c7 svg circle.path-fill,
.c7 svg polyline.path-fill {
  fill: !important;
  -webkit-transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: fill 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c7 svg path.stroke-fill,
.c7 svg line.stroke-fill,
.c7 svg polygon.stroke-fill,
.c7 svg rect.stroke-fill,
.c7 svg circle.stroke-fill,
.c7 svg polyline.stroke-fill {
  stroke: !important;
  -webkit-transition: stroke 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: stroke 200ms cubic-bezier(0.4,0,0.2,1) 0ms;
}

.c7 svg rect.rect-height {
  height: 16px;
  width: 16px;
}

.c7.downward {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.c7.upward {
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c7 img {
  width: 16px;
}

.c9 {
  padding: 8px;
}

.c2.MuiButton-root {
  height: 32px;
  font-size: 12px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  line-height: 1;
  border-radius: 2px;
  font-weight: 600;
}

.c2.MuiButton-outlined {
  padding: 8px 12px;
}

.c2.MuiButton-outlinedPrimary {
  border-color: #d8d8d8;
}

.c4.MuiButton-root {
  border-radius: 50%;
  min-width: 38px;
  height: 38px;
  padding: 0;
}

.c4.MuiButton-text {
  padding: 0;
}

.c5.MuiButton-outlined {
  border-radius: 0 2px 2px 0;
}

.c5.MuiButton-outlinedPrimary {
  border-color: #d8d8d8;
}

.c5.MuiButton-root {
  min-width: 0;
  height: 32px;
  padding: 8px 4px;
}

.c5.MuiButton-text {
  padding: 0;
}

.c3.MuiButton-outlined {
  margin-right: 0;
  border-radius: 2px 0 0 2px;
  border-right: none;
}

.c8 {
  position: absolute;
  overflow: hidden;
  background: #fff;
  height: 0px;
  -webkit-transition-property: height;
  transition-property: height;
  -webkit-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
  z-index: 1;
}

<div
  className="c0"
>
  <div
    className="SyncButton"
    style={
      Object {
        "display": "inline-block",
        "position": "relative",
      }
    }
  >
    <div
      className="c1"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 c3 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync
        </span>
      </button>
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c4 c5 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          <div
            className="c6 c7"
          >
            <svg
              aria-hidden={true}
              className="MuiSvgIcon-root"
              focusable="false"
              viewBox="0 0 24 24"
            >
              <path
                d="M7 10l5 5 5-5z"
              />
            </svg>
          </div>
        </span>
      </button>
    </div>
    <div
      className="c1 c8"
    >
      <button
        className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "whiteSpace": "nowrap",
          }
        }
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          Sync Without Source
        </span>
      </button>
    </div>
  </div>
  <div
    className="c9"
  />
  <button
    className="MuiButtonBase-root MuiButton-root MuiButton-outlined c2 MuiButton-outlinedPrimary MuiButton-disableElevation"
    disabled={false}
    onBlur={[Function]}
    onClick={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={0}
    type="button"
  >
    <span
      className="MuiButton-label"
    >
      Suspend
    </span>
  </button>
</div>
`;
